{"version":3,"sources":["_assets/AirPods_Vector.svg","_assets/honne.mp3","_assets/walking.mp3","_assets/boy4.svg","component/Airpod.js","container/Landing.js","App.js","container/Stats.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AirpodImage","React","forwardRef","props","ref","react_default","a","createElement","id","draggable","src","airpodSvg","className","Airpod","posed","init","scale","drag","dragBounds","left","right","Landing","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rampAudio","s","setInterval","console","log","currentTime","volume","clearInterval","getSoundAndFadeAudio","sound","state","song1Playing","song1","current","song2","sound2","fadePoint","fadeAudio","muted","setState","onDrag","x","airPodPosition","parseFloat","onDragStart","y","startPosition","onDragEnd","blah","startAnimations","animateStart","play","createRef","onClick","honne","type","onCanPlay","onCanPlayThrough","loop","walking","boy","component_Airpod","onValueChange","Component","App","container_Landing","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d1b9803.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AirPods_Vector.83c5e1f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/honne.cbfac30a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/walking.7fcc9613.mp3\";","module.exports = __webpack_public_path__ + \"static/media/boy4.36ce72fe.svg\";","import React, { Component } from 'react';\nimport posed from 'react-pose'\n\nimport airpodSvg from '../_assets/AirPods_Vector.svg'\n////s//\nconst AirpodImage = React.forwardRef((props, ref) => (\n  <div>\n    <img id='airpode-img' draggable={false} ref={ref} src={airpodSvg} className='airpod'/>\n  </div>\n))\n\nconst Airpod = posed(AirpodImage)({\n  draggable: 'x',\n  init: { scale: 1.0 },\n  drag: { scale: 1.1 },\n  dragBounds: { left: '-230%', right: '10%' },\n  // passive: {\n  //   opacity: ['x', interpolate(\n  //     [-200, -100, 100, 200],\n  //     [0, 1, 1, 0]\n  //   )]\n  // }\n})\n\nexport default Airpod\n","import React, { Component } from 'react'\nimport Airpod from '../component/Airpod'\n\nimport honne from '../_assets/honne.mp3'\nimport walking from '../_assets/walking.mp3'\nimport boy from '../_assets/boy4.svg'\n\nclass Landing extends Component {\n  constructor(props) {\n    super(props)\n    this.song1 = React.createRef()\n    this.song2 = React.createRef()\n\n    this.state = {\n      song1Playing: true,\n      animateStart: false,\n      airPodPosition: 0,\n      startPosition: 0,\n    }\n  }\n\n  rampAudio = (s) => {\n    var rampAudio = setInterval(() => {\n        // console.log(sound.volume, sound.currentTime, fadePoint)\n        // Only fade if past the fade out point or not at zero already\n        console.log(s.currentTime, s.volume)\n        if ((s.volume >= 0.0)) {\n            if (s.volume + 0.1 > 0.9) {\n              s.volume = 1\n            }\n            else {\n              s.volume += 0.1;\n            }\n        }\n        // When volume at zero stop all the intervalling\n        if (s.volume >= 1.0) {\n            clearInterval(rampAudio);\n        }\n    }, 50);\n  }\n\n  getSoundAndFadeAudio = () => {\n\n    const sound = this.state.song1Playing ? this.song1.current : this.song2.current\n    const sound2 = this.state.song1Playing ? this.song2.current : this.song1.current\n    console.log('fire getSoundAndFadeAudio')\n    console.log('sound', sound)\n    // Set the point in playback that fadeout begins. This is for a 2 second fade out.\n    var fadePoint = sound.currentTime + 0.5;\n\n    var fadeAudio = setInterval(() => {\n        // console.log(sound.volume, sound.currentTime, fadePoint)\n        // Only fade if past the fade out point or not at zero already\n        console.log(sound.currentTime)\n        if ((sound.currentTime >= fadePoint) && (sound.volume > 0.0)) {\n            if (sound.volume - 0.1 < 0.09) {\n              sound.volume = 0\n            }\n            else {\n              sound.volume -= 0.1;\n            }\n        }\n        // When volume at zero stop all the intervalling\n        if (sound.volume <= 0.0) {\n            clearInterval(fadeAudio);\n            console.log(sound2)\n            if (sound2.muted) {\n              sound2.muted = false\n              sound2.volume = 0.0;\n            }\n            this.rampAudio(sound2)\n            this.setState({ song1Playing: !this.state.song1Playing })\n        }\n    }, 50);\n  }\n\n  onDrag = (x) => {\n    // console.log(x)\n    this.setState({ airPodPosition: parseFloat(x) })\n  }\n\n  onDragStart = (x,y) => {\n    console.log('DRAG START', this.state.airPodPosition)\n    this.setState({ startPosition: this.state.airPodPosition })\n  }\n\n  onDragEnd = (blah) => {\n    console.log('DRAG END', this.state.airPodPosition)\n\n    if ((this.state.airPodPosition < -120.00 && this.state.startPosition >= -120.00) || (this.state.airPodPosition > -120.00 && this.state.startPosition <= -120.00) ) {\n      this.getSoundAndFadeAudio()\n    }\n  }\n\n  startAnimations = () => {\n     this.setState({ animateStart: true })\n     this.song1.current.play()\n     this.song2.current.play()\n  }\n\n  render() {\n    this.song1.current && console.log(this.song1, '')\n    return (\n      <div className='parent-container'>\n        <div className='intro-container'>\n          <div className='inner-intro'>\n            <h1 className='title'>\n              a week without airpods\n            </h1>\n            <h2 className='subtitle'>\n              This is an interactive application showing stuff. Please press Start to begin.\n            </h2>\n            <button onClick={this.startAnimations}>Start</button>\n          </div>\n        <audio\n          id='song1'\n          ref={this.song1}\n          src={honne}\n          type=\"audio/mpeg\"\n          onCanPlay={(x) => console.log('canplay')}\n          onCanPlayThrough={() => console.log('can play')}\n          loop\n          />\n        <audio\n          id='song2'\n          ref={this.song2}\n          src={walking}\n          type=\"audio/mpeg\"\n          onCanPlay={() => {\n          }}\n          onCanPlayThrough={() => console.log('can play2')}\n          muted\n          loop\n          />\n\n        </div>\n        {\n          this.state.animateStart && (\n            <div className='landing-container'>\n              <img src={boy} className='boy-image'/>\n              <Airpod\n                onDragStart={this.onDragStart}\n                onDragEnd={this.onDragEnd}\n                onValueChange={{x: this.onDrag}}\n              />\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport LandingPage from './container/Landing'\nimport StatsPage from './container/Stats'\n// import Airpod from './AirPods_Vector.svg'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.song1 = React.createRef()\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <LandingPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\n\nclass Stats extends Component {\n  render() {\n    return (\n      <h1>hello</h1>\n    )\n  }\n}\n\nexport default Stats\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}