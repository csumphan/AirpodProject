{"version":3,"sources":["_assets/AirPods_Vector.svg","_assets/honne.mp3","_assets/walking2.mp3","_assets/boy4.svg","component/Airpod.js","container/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AirpodImage","React","forwardRef","props","ref","react_default","a","createElement","id","draggable","onLoad","src","airpodSvg","className","Airpod","posed","init","scale","drag","dragBounds","left","right","AnimationContainer","div","enter","y","opacity","exit","SubtitleContainer","delay","transition","ease","Landing","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rampAudio","s","setInterval","volume","clearInterval","getSoundAndFadeAudio","sound","state","song1Playing","song1","current","song2","sound2","fadePoint","currentTime","fadeAudio","muted","setState","onDrag","x","airPodPosition","parseFloat","onDragStart","startPosition","onDragEnd","blah","startAnimations","animateStart","createRef","buttonState","airPodLoaded","boyLoaded","buttonAnimationDone","_this2","react_pose_es","key","lib_default","onSuccess","play","onClick","honne","type","loop","walking2","onCanPlay","boy","component_Airpod","onValueChange","Component","App","container_Landing","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34cb705c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AirPods_Vector.83c5e1f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/honne.e5e014f4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/walking2.5d331e9f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/boy4.36ce72fe.svg\";","import React, { Component } from 'react';\nimport posed from 'react-pose'\n\nimport airpodSvg from '../_assets/AirPods_Vector.svg'\n\nconst AirpodImage = React.forwardRef((props, ref) => (\n  <div>\n    <img id='airpode-img' draggable={false} onLoad={props.onLoad} ref={ref} src={airpodSvg} className='airpod'/>\n  </div>\n))\n\nconst Airpod = posed(AirpodImage)({\n  draggable: 'x',\n  init: { scale: 1.0 },\n  drag: { scale: 1.1 },\n  dragBounds: { left: '-230%', right: '10%' },\n})\n\nexport default Airpod\n","import React, { Component } from 'react'\nimport posed, { PoseGroup } from 'react-pose'\nimport ProgressButton from 'react-progress-button'\n\nimport Airpod from '../component/Airpod'\nimport honne from '../_assets/honne.mp3'\nimport walking2 from '../_assets/walking2.mp3'\nimport boy from '../_assets/boy4.svg'\n\nimport \"react-progress-button/react-progress-button.css\"\n\nconst AnimationContainer = posed.div({\n  enter: { y: 0, opacity: 1 },\n  exit: { y: 50, opacity: 0 }\n});\n\nconst SubtitleContainer = posed.div({\n  enter: { y: 0, opacity: 1, delay: 900 },\n  exit: {\n    opacity: 0,\n    y: -100,\n    transition: {\n      ease: [.01, .64, .99, .56]\n    },\n    delay: 200\n  }\n})\n\nclass Landing extends Component {\n  constructor(props) {\n    super(props)\n    this.song1 = React.createRef()\n    this.song2 = React.createRef()\n\n    this.state = {\n      song1Playing: true,\n      animateStart: false,\n      airPodPosition: 0,\n      startPosition: 0,\n      buttonState: '',\n      airPodLoaded: false,\n      boyLoaded: false,\n      buttonAnimationDone: false\n    }\n  }\n\n  rampAudio = (s) => {\n    var rampAudio = setInterval(() => {\n        // console.log(sound.volume, sound.currentTime, fadePoint)\n        // Only fade if past the fade out point or not at zero already\n        if ((s.volume >= 0.0)) {\n            if (s.volume + 0.1 > 0.9) {\n              s.volume = 1\n            }\n            else {\n              s.volume += 0.1;\n            }\n        }\n        // When volume at zero stop all the intervalling\n        if (s.volume >= 1.0) {\n            clearInterval(rampAudio);\n        }\n    }, 50);\n  }\n\n  getSoundAndFadeAudio = () => {\n\n    const sound = this.state.song1Playing ? this.song1.current : this.song2.current\n    const sound2 = this.state.song1Playing ? this.song2.current : this.song1.current\n\n    // Set the point in playback that fadeout begins. This is for a 2 second fade out.\n    var fadePoint = sound.currentTime + 0.5;\n\n    var fadeAudio = setInterval(() => {\n        // console.log(sound.volume, sound.currentTime, fadePoint)\n        // Only fade if past the fade out point or not at zero already\n        if ((sound.currentTime >= fadePoint) && (sound.volume > 0.0)) {\n            if (sound.volume - 0.1 < 0.09) {\n              sound.volume = 0\n            }\n            else {\n              sound.volume -= 0.1;\n            }\n        }\n        // When volume at zero stop all the intervalling\n        if (sound.volume <= 0.0) {\n            clearInterval(fadeAudio);\n            if (sound2.muted) {\n              sound2.muted = false\n              sound2.volume = 0.0;\n            }\n            this.rampAudio(sound2)\n            this.setState({ song1Playing: !this.state.song1Playing })\n        }\n    }, 50);\n  }\n\n  onDrag = (x) => {\n      this.setState({ airPodPosition: parseFloat(x) })\n    }\n\n  onDragStart = (x) => {\n    this.setState({ startPosition: this.state.airPodPosition })\n  }\n\n  onDragEnd = (blah) => {\n\n    if ((this.state.airPodPosition < -88.00 && this.state.startPosition >= -88.00) || (this.state.airPodPosition > -88.00 && this.state.startPosition <= -88.00) ) {\n      this.getSoundAndFadeAudio()\n    }\n  }\n\n  startAnimations = () => {\n     this.setState({ animateStart: true })\n  }\n\n  render() {\n    return (\n      <div className='parent-container'>\n        <div className='intro-container'>\n          <div className='inner-intro'>\n            <h1 className='title'>\n              a week without airpods\n            </h1>\n            <PoseGroup>\n            {\n              this.state.animateStart && this.state.buttonAnimationDone ?\n                <SubtitleContainer key='second'>\n                  <h2 className='subtitle'>\n                    Drag the airpod off and on the ear to toggle between music and background sound\n                  </h2>\n                </SubtitleContainer>\n                :\n                <SubtitleContainer key='first'>\n                  <h2 className='subtitle'>\n                    This is an interactive application contrasting the sounds I heard with and without my airpods\n                  </h2>\n                  <div className='button-container'>\n                    <ProgressButton onSuccess={() => {\n                      this.setState({ buttonAnimationDone: true })\n                      this.song1.current.play()\n                      this.song2.current.play()\n                      }\n                    }\n                      onClick={this.startAnimations}\n                      state={this.state.buttonState}>\n                      start\n                    </ProgressButton>\n                  </div>\n                </SubtitleContainer>\n            }\n            </PoseGroup>\n          </div>\n        <audio\n          id='song1'\n          ref={this.song1}\n          src={honne}\n          type=\"audio/mpeg\"\n          loop\n          />\n        <audio\n          id='song2'\n          ref={this.song2}\n          src={walking2}\n          type=\"audio/mpeg\"\n          onCanPlay={() => {\n          }}\n          muted\n          loop\n          />\n\n        </div>\n          {\n            this.state.animateStart &&  (\n              <AnimationContainer key='animationcontainer' className='landing-container'>\n                <img src={boy} className='boy-image' onLoad={() => this.setState({ boyLoaded: true }, () => this.state.boyLoaded && this.state.airPodLoaded ? this.setState({buttonState: 'success'}) : null)}/>\n                <Airpod\n                  onLoad={() => this.setState({ airPodLoaded: true }, () => this.state.boyLoaded && this.state.airPodLoaded ? this.setState({buttonState: 'success'}) : null)}\n                  onDragStart={this.onDragStart}\n                  onDragEnd={this.onDragEnd}\n                  onValueChange={{x: this.onDrag}} />\n              </AnimationContainer>\n            )\n          }\n\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport LandingPage from './container/Landing'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <LandingPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}